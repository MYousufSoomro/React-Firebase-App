{"version":3,"sources":["logo.svg","assets/images/react-logo-yellow.png","config/firebase.js","Components/Login.js","Components/Signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","temp","log_in","bind","assertThisInitialized","_this$state","flag","Promise","resolve","reject","signInWithEmailAndPassword","then","e","console","log","user","catch","error","errorMessage","message","alert","login","_this2","react_default","a","createElement","className","type","placeholder","onChange","setState","target","value","onClick","Component","Signup","sign_up","createUserWithEmailAndPassword","signup","App","trigger","themeColor","document","getElementsByTagName","content","src","yellowLogo","alt","Components_Login","logo","Components_Signup","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11fd29ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo-yellow.886105f6.png\";","import * as firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCaFDH9Su4q2PDQdu8VBvmFAX1lguyXrpo\",\r\n  authDomain: \"react-firebase-3.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-3.firebaseio.com\",\r\n  projectId: \"react-firebase-3\",\r\n  storageBucket: \"react-firebase-3.appspot.com\",\r\n  messagingSenderId: \"12184551121\",\r\n  appId: \"1:12184551121:web:7f050702638982ba\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nvar auth = firebase.auth();\r\n\r\nfunction login(email, password) {\r\n  new Promise((resolve, reject) => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(e => {\r\n        console.log('CONSOLE FROM FIREBASE.JS',e.user);\r\n        resolve(e.user);\r\n      })\r\n      .catch(function(error) {\r\n        // Handle Errors here.\r\n        // var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // ...\r\n        reject(alert(errorMessage));\r\n      });\r\n  });\r\n}\r\n\r\nfunction signup(email, password) {\r\n  new Promise((resolve, reject) => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(e => {\r\n        resolve(console.log(e));\r\n      })\r\n      .catch(function(error) {\r\n        // Handle Errors here.\r\n        //   var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // ...\r\n        reject(alert(errorMessage));\r\n      });\r\n  });\r\n}\r\n\r\nexport { login, signup };\r\n","import React, { Component } from \"react\";\r\nimport { login } from \"../config/firebase\";\r\nimport \"../App.css\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      temp: {}\r\n    };\r\n\r\n    this.log_in = this.log_in.bind(this);\r\n  }\r\n  log_in() {\r\n    const { email, password } = this.state;\r\n\r\n    try {\r\n      const flag = login(email, password);\r\n      console.log(\"flag===>>>>\", flag);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { temp } = this.state;\r\n    console.log(\"temp======>>>> \", temp);\r\n\r\n    return (\r\n      <div>\r\n        <h3>Login Page</h3>\r\n        <input\r\n          className=\"loginInput\"\r\n          type=\"email\"\r\n          placeholder=\"Type Email....\"\r\n          onChange={e => {\r\n            this.setState({ email: e.target.value });\r\n          }}\r\n        />\r\n        <br />\r\n\r\n        <input\r\n          className=\"loginInput\"\r\n          type=\"password\"\r\n          placeholder=\"Type Password....\"\r\n          onChange={e => {\r\n            this.setState({ password: e.target.value });\r\n          }}\r\n        />\r\n        <br />\r\n\r\n        <button className=\"loginButton\" onClick={this.log_in}>\r\n          Login\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { signup } from \"../config/firebase\";\r\nimport \"../App.css\";\r\n\r\nclass Signup extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      temp: {}\r\n    };\r\n\r\n    this.sign_up = this.sign_up.bind(this);\r\n  }\r\n  sign_up() {\r\n    const { email, password } = this.state;\r\n\r\n    try {\r\n      const flag = signup(email, password);\r\n      console.log(\"flag===>>>>\", flag);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { temp } = this.state;\r\n    console.log(\"temp======>>>> \", temp);\r\n    return (\r\n      <div>\r\n        <h3>Signup Page</h3>\r\n        <input\r\n          className=\"signupInput\"\r\n          type=\"email\"\r\n          placeholder=\"Type Email....\"\r\n          onChange={e => {\r\n            this.setState({ email: e.target.value });\r\n          }}\r\n        />\r\n        <br />\r\n\r\n        <input\r\n          className=\"signupInput\"\r\n          type=\"password\"\r\n          placeholder=\"Type Password....\"\r\n          onChange={e => {\r\n            this.setState({ password: e.target.value });\r\n          }}\r\n        />\r\n        <br />\r\n\r\n        <button className=\"signupButton\" onClick={this.sign_up}>\r\n          Signup\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport yellowLogo from './assets/images/react-logo-yellow.png'\nimport \"./App.css\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      trigger: false,\n      themeColor: \"#61DAFB\"\n    };\n  }\n\n  render() {\n    const { trigger, themeColor } = this.state;\n    document.getElementsByTagName(\"META\")[2].content = themeColor;\n\n    return (\n      <div className=\"App\">\n        {trigger && (\n          <div>\n          <img src={yellowLogo} className=\"App-logo\" alt=\"logo\" />\n            <Login />\n            <hr />\n            <p>Don't have an Account?</p>\n            <button\n              className=\"signupButton\"\n              onClick={() => {\n                this.setState({ trigger: !trigger, themeColor: '#61DAFB' });\n              }}\n            >\n              Sign up\n            </button>\n          </div>\n        )}\n\n        {!trigger && (\n          <div>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <Signup />\n            <hr />\n            <p>Already have an Account?</p>\n            <button\n              className=\"loginButton\"\n              onClick={() => {\n                this.setState({ trigger: !trigger, themeColor: '#f1fb61' });\n              }}\n            >\n              Login\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}